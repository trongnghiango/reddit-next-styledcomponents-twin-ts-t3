import type { NextPage } from "next";
import Head from "next/head";
import { Carousel } from "../components/ui/carousel";
import {
  ArrowDown,
  HomeIcon,
  IconLogo,
  SearchIcon,
  TextIcon,
} from "../components/ui/icons";
import { Login } from "../components/pages/login";
import Image from "next/image";
import { Cat } from "../components/ui/cat";
import { ReactNode } from "react";
import tw, { styled } from "twin.macro";
import { StyledComponent } from "styled-components";

// import {SearchIcon} from "@heroicons/react/solid"

const logo = "/favicon.ico";

const IMAGES = [
  {
    imageUrl: "https://loremflickr.com/600/300/paris",
    placeHolder: "Paris",
  },
  {
    imageUrl: "https://loremflickr.com/600/300/dog",
    placeHolder: "Dog",
  },
  {
    imageUrl: "https://loremflickr.com/600/300/cat",
    placeHolder: "Cat",
  },
  {
    imageUrl: "https://loremflickr.com/600/300/forest",
    placeHolder: "Forest",
  },
];

const Home: NextPage = () => (
  <>
    <Head>
      <title>Create T3 App</title>
      <meta name="description" content="Generated by create-t3-app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

    <main>
      {/* HEADER SECTION */}
      <header className="flex w-full text-white bg-white">
        <div className="flex items-center container mx-auto">
          {/* left section  */}
          <div className="flex items-center flex-1">
            {/* LOGO */}
            <div className="flex items-center h-full">
              <IconLogo className="h-[32px] w-[32px] mr-2" />
              <TextIcon className="h-[18px] mr-5" />
            </div>

            {/* OPTION */}
            <Option>
              <OptionButton>
                <span className="inline">Home</span>
                <HomeIcon className="h-5 w-5 absolute top-1/2 mt-[-10px] left-[10px]" />
                <ArrowDown className="absolute w-[16px] h-[16px] mt-[-10px] right-2 top-1/2"/>
              </OptionButton>
            </Option>
            {/* <div className="flex items-center justify-between min-w-[100px] text-black">
              <span>Home</span>
              <div>
                <ArrowDown className="text-black w-4 h-4" />
              </div>
            </div> */}
            <form
              action=""
              className="bg-gray-800 p-1 px-4 flex rounded-md border border-gray-600 hover:border-gray-300 text-white"
            >
              <span className="text-gray-300">
                <SearchIcon />
              </span>
              <input
                type="text"
                className="h-8 bg-gray-800 focus:outline-none"
                placeholder="Search"
              />
            </form>
          </div>

          {/* right section */}
          <div className="flex gap-1">
            {/* control */}
            <div className="flex items-center">
              <img src={logo} alt="logo" className="h-8 w-8" />
              <img src={logo} alt="logo" className="h-8 w-8" />
              <img src={logo} alt="logo" className="h-8 w-8" />
            </div>

            <div className="flex items-center gap-1">
              {/* notification */}
              <div className="flex items-center">
                <img src={logo} alt="logo" className="h-8 w-8" />
                <img src={logo} alt="logo" className="h-8 w-8" />
                <img src={logo} alt="logo" className="h-8 w-8" />
              </div>

              {/* info User */}
              <div className="flex items-center w-[150px] gap-2 justify-between">
                <div className="flex items-center gap-1 text-gray-400">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    strokeWidth={1.5}
                    stroke="currentColor"
                    className="w-6 h-6"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      d="M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z"
                    />
                  </svg>
                  <div className="">
                    <p className="text-sm text-black">kakaprogrammer</p>
                    <p className="text-xs font-thin text-gray-500">1 karma</p>
                  </div>
                </div>

                <div className="text-red-500">
                  <ArrowDown className="h-3 w-3 text-blue-500" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </header>

      {/* <Carousel /> */}
      {/* <Login /> */}
      <div className="container p-3">AKAPRO</div>
      <TailwindButton>Test click</TailwindButton>
      <ConditionalButton>test2</ConditionalButton>
    </main>
  </>
);

export default Home;

const Option = tw.div`
  border-2
  border-transparent
  h-9
  w-[72px]
  sm:w-[270px]
  relative
  rounded
  // --newRedditTheme-line: #EDEFF1;
  hover:border-[#EDEFF1]
  text-black
`;

const OptionButton = tw.button`
  absolute
  h-full
  w-full
  left-0
  top-0
  bottom-0
  pl-[40px]
  pr-[56px]
  overflow-hidden
  text-left
  // box-sizing[border-box]
`;

const TailwindButton = tw.button`
  bg-red-500
  hover:bg-red-700
  text-white
  font-bold
  py-2
  px-4
  border
  border-black
  rounded
`;

const ConditionalButton = styled("button")<{ isRed?: string }>(({ isRed }) => [
  isRed ? tw`bg-red-500 hover:bg-red-700` : tw`bg-blue-500 hover:bg-blue-500`,
  tw`
    text-white
    font-bold
    py-2
    px-4
    border
    border-black
    rounded
  `,
]);

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

const TechnologyCard = ({
  name,
  description,
  documentation,
}: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
      <p className="text-sm text-gray-600">{description}</p>
      <a
        className="mt-3 text-sm underline text-violet-500 decoration-dotted underline-offset-2"
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </a>
    </section>
  );
};
